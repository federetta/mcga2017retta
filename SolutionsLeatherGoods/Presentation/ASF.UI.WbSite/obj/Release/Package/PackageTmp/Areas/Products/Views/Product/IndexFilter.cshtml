@using ASF.Entities
@model IEnumerable<ASF.Entities.Product>
@using  GridMvc.Html

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="@Url.Content("~/Content/Css/bootstrap.min.css")" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "IndexProduct";
}
@{ var listadoDealer = new List<SelectListItem>();
    foreach (var std in ViewData["Categoria"] as IEnumerable<Category>)
    {
        var elemento = new SelectListItem()
        {
            Text = std.Name,
            Value = std.Id.ToString()
        };
        listadoDealer.Add(elemento);
    }
};

<h2>IndexProduct</h2>
@*HttpContext.Current.Request.Cookies;*@

@Html.BeginForm("IndexFilter","Product", FormMethod.Get) 

    <div class="form-group">
        <div class="col-md-9">
            @Html.DropDownList("Category", listadoDealer, new { @class = "btn btn-default dropdown-toggle" })
        </div>
        <div class="col-md-3">
            <button class="btn-primary">Buscar</button>
        </div>
    </div>
@{Html.EndForm();}

@*<div class="row">
    @foreach (var item in Model)
    {
            <div class="col-sm-4"  style="background-color:lavenderblush;" >
                <p class="text-center">
                    Titulo
                </p>
                <p class="text-center">
                    @Html.DisplayFor(modelItem => item.Title)
                </p>
                 <p class="text-center">
                     <img src="@Html.DisplayFor(modelItem => item.Image)" class="img-thumbnail" alt="Cinque Terre">
                </p>
                <p class="text-center">
                    Precio
                </p>
                <p class="text-center">
                    @Html.DisplayFor(modelItem => item.Price)
                </p>
        
                
                <p class="text-center">Descripcion</p>
                @Html.DisplayFor(modelItem => item.Description)<br>
                <button class="btn-primary">Buscar</button>
            </div>
    }
</div>*@
@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
      
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <img src="@Html.DisplayFor(modelItem => item.Image)" class="img-thumbnail" alt="Cinque Terre" width="304" height="236"> 
               
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            
            <td>
                <button class="btn-primary">Buscar</button>
            </td>
        </tr>
    }
</table>*@

@Html.BeginForm("Create", "CartController", FormMethod.Post)

<div class="form-group">
    <div class="col-md-3">
        <button class="btn-primary">Buscar</button>
    </div>
</div>
@{Html.EndForm();}

@Html.Grid(Model).Columns(columns =>
{
    columns.Add(foo => foo.Title).Sortable(true).Filterable(true).SetWidth(110);
    columns.Add(foo => foo.Description).Sortable(true).Filterable(true);
    columns.Add()
        .Titled("Img")
        .Sanitized(false)
        .Encoded(false)
        .RenderValueAs(model => new HtmlString
            (
                "<p>"+ model.Image +"</p>"
            )
        );
    columns.Add(foo => foo.Price).Sortable(true).Filterable(true);
    columns.Add()
       .Titled("Accion")
       .Sanitized(false)
       .Encoded(false)
       .RenderValueAs(model => new HtmlString
           (
               "<button class=\"btn - primary\">Comprar</button>"
           )
       );



}).WithPaging(10)
